import { Telegraf, Markup, Context } from "telegraf";
import * as dotenv from "dotenv";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ `.env`
const BOT_TOKEN: string | undefined = process.env.BOT_TOKEN;
if (!BOT_TOKEN) {
    throw new Error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env");
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π `Context`
const bot: Telegraf<Context> = new Telegraf(BOT_TOKEN);

console.log("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...");

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API
bot.telegram.getMe()
    .then((botInfo) => {
        console.log(`‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω: \x1b]8;;https://t.me/${botInfo.username}\x1b\\@${botInfo.username}\x1b]8;;\x1b\\`);
    })
    .catch((err) => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API:", err);
        process.exit(1);
    });

// –ö–æ–º–∞–Ω–¥–∞ `/start`
bot.start((ctx) => {
    ctx.reply(
        "–ü—Ä–∏–≤–µ—Ç! –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º –º–æ–∏ —Ç–µ–º—ã?",
        Markup.inlineKeyboard([
            [Markup.button.callback("–°—Ç–∞—Ä—Ç–∞–ø—ã", "topic_startups")],
            [Markup.button.callback("–§–∏–Ω–∞–Ω—Å—ã", "topic_finance")],
            [Markup.button.callback("–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", "topic_training")]
        ])
    );
});

// –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ "–î–∞"/"–ù–µ—Ç"
const questionButtons = Markup.inlineKeyboard([
    [Markup.button.callback("–î–∞", "answer_yes"), Markup.button.callback("–ù–µ—Ç", "answer_no")]
]);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
bot.action("topic_startups", (ctx) => ctx.reply("–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º –º–æ–∏ —Å—Ç–∞—Ä—Ç–∞–ø—ã?", questionButtons));
bot.action("topic_finance", (ctx) => ctx.reply("–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º —Ç–µ–º—ã –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º?", questionButtons));
bot.action("topic_training", (ctx) => ctx.reply("–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º –º–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏?", questionButtons));
bot.action("answer_yes", (ctx) => ctx.reply("–û—Ç–ª–∏—á–Ω–æ! –†–∞–¥, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ."));
bot.action("answer_no", (ctx) => ctx.reply("–ü–æ–Ω—è–ª, —É—á—Ç—É!"));

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
console.log("‚ö° –ü–µ—Ä–µ–¥ bot.launch()");
bot.launch()
    .then(() => {
        console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
    })
    .catch((err) => {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", err);
        process.exit(1);
    });

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
process.once("SIGINT", () => bot.stop("SIGINT"));
process.once("SIGTERM", () => bot.stop("SIGTERM"));

// –≠–∫—Å–ø–æ—Ä—Ç –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
export default bot;
