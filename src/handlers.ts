import { CustomContext } from "./types.js"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
import { Markup } from "telegraf";

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
export const handleStart = (ctx: CustomContext) => {
    ctx.reply(
        "–ü—Ä–∏–≤–µ—Ç! –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º –º–æ–∏ —Ç–µ–º—ã?",
        Markup.inlineKeyboard([
            [Markup.button.callback("–°—Ç–∞—Ä—Ç–∞–ø—ã", "topic_startups")],
            [Markup.button.callback("–§–∏–Ω–∞–Ω—Å—ã", "topic_finance")],
            [Markup.button.callback("–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", "topic_training")]
        ])
    );
};

// –ö–Ω–æ–ø–∫–∏ "–î–∞" / "–ù–µ—Ç"
const questionButtons = Markup.inlineKeyboard([
    [Markup.button.callback("–î–∞", "answer_yes"), Markup.button.callback("–ù–µ—Ç", "answer_no")]
]);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–µ–º
export const handleTopics = (ctx: CustomContext) => {
    if (!ctx.match) return; // üîπ –ó–∞—â–∏—Ç–∞ –æ—Ç `null`

    let message = "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º –º–æ–∏ —Å—Ç–∞—Ä—Ç–∞–ø—ã?";

    switch (ctx.match[0]) {
        case "topic_finance":
            message = "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º —Ç–µ–º—ã –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º?";
            break;
        case "topic_training":
            message = "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã –ª–∏ –≤–∞–º –º–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏?";
            break;
    }

    ctx.reply(message, questionButtons);
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ "–î–∞" / "–ù–µ—Ç"
export const handleAnswers = (ctx: CustomContext) => {
    if (!ctx.match) return; // üîπ –ó–∞—â–∏—Ç–∞ –æ—Ç `null`

    const message = ctx.match[0] === "answer_yes"
        ? "–û—Ç–ª–∏—á–Ω–æ! –†–∞–¥, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ."
        : "–ü–æ–Ω—è–ª, —É—á—Ç—É!";

    ctx.reply(message);
};
